<launch>

    <!-- Загрузка робота в сервер параметров  -->
    <param name="robot_description" command="xacro '$(find project_470122)/urdf/robot.urdf.xacro'" />
    <!-- Robot pose -->
    <arg name="x" default="0" />
    <arg name="y" default="0" />
    <arg name="z" default="0.2" />

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name"
            value="$(find roscourse_2024_project_scene)/worlds/simple_scene.world" />
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="true" />
        <arg name="headless" value="false" />
        <arg name="debug" value="false" />
    </include>

    <!-- Запуск паблишеров-->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="100.0" />
    </node>


    <!-- Спавн робота -->
    <!-- <node name="my_world_model_spawn" pkg="gazebo_ros" type="spawn_model"
        args="-sdf -param world_description -model model">
    </node> -->
    <node name="my_robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-urdf -param robot_description -model robot -x $(arg x) -y $(arg y) -z $(arg z)"
        respawn="false" />

    <!-- <node name="my_robot_model_spawn" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model robot">
    </node> -->


    <!-- Hector SLAM запуск -->
    <!-- <include file="$(find hector_mapping)/launch/mapping_default.launch">
    </include>
    <param name="use_sim_time" value="true" />
    <param name="base_frame" value="base_footprint" />
    <param name="odom_frame" value="wheel_odom" />
    <param name="map_frame" value="map" />
    <param name="laser_max_range" value="2" />
    <param name="laser_min_range" value="0.1" />
    <param name="mapping_frequency" value="10.0" />
    <param name="pub_map_tf" value="false" />
    <param name="pub_map_odom_transform" value="false" /> -->


    <!-- EKF Localizer Фильтр калмана -->
    <!-- <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"
        output="screen">
        <param name="use_sim_time" value="true" />
        <rosparam file="$(find project_470122)/config/ekf.yaml" command="load" />
    </node>  -->


    <!-- статические ТФ паблишеры для корректной работы Hector SLAM  -->
    <node name="static_transform_publisher1" pkg="tf" type="static_transform_publisher"
        args=" 0 0 0 0.0 0.0 0.0 1.0 map odom 60">  <!--nav -->
    </node>
    <node name="static_transform_publisher2" pkg="tf" type="static_transform_publisher"
        args=" 0 0 0.1 0.0 0.0 0.0 1.0 base_footprint base_link 60">
    </node>
    <!-- <node name="static_transform_publisher3" pkg="tf" type="static_transform_publisher"
        args=" 0 0 0 0.0 0.0 0.0 1.0 map scanmatcher_frame 60">
    </node> -->
    <node name="static_transform_publisher4" pkg="tf" type="static_transform_publisher"
        args=" 0 0 0 0.0 0.0 0.0 1.0 map nav 60">
    </node>


    <!-- Запуск map to img ноды -->
    <!-- <node name="map_to_image_node" pkg="project_470122" type="map_img.py"
        output="screen">
    </node> -->


    <!-- AMCL оказывается нужен только когда есть уже готовая карта -->
    <!-- <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <rosparam file="$(find project_470122)/config/amcl_params.yaml" command="load" />
    </node> -->


    <!-- Move Base НАВИАЦИЯ-->
    <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find project_470122)/config/costmap_common_params.yaml"
            command="load" ns="global_costmap" />
        <rosparam file="$(find project_470122)/config/costmap_common_params.yaml"
            command="load" ns="local_costmap" />
        <rosparam file="$(find project_470122)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find project_470122)/config/global_costmap_params.yaml"
            command="load" />
        <rosparam file="$(find project_470122)/config/trajectory.yaml" command="load" />
    </node> -->


    <!-- Запуск RViz -->
    <arg name="rviz_config" default="$(find project_470122)/config/nav.rviz" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" />


    <!-- Запуск рулёжки с клавиатуры -->
    <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py"
        name="teleop_twist_keyboard"
        output="screen">
        <remap from="/cmd_vel" to="/cmd_vel" />
    </node>

    <!-- Нода зрения -->
    <node pkg="project_470122" type="cv.py" name="cv"
        output="screen">
    </node>

    <!-- Нода руль -->
    <node pkg="project_470122" type="controller.py" name="controller"
        output="screen">
    </node>


</launch>